<?xml version="1.0"?>
<launch>
    <arg name="world" default="empty"/>
    <arg name="scale" default="1.0"/>
    <arg name="gui" default="false"/>
    <arg name="x" default="0.0"/>
    <arg name="y" default="0.0"/>
    <arg name="z" default="0.3"/>
    <arg name="R" default="0.0"/>
    <arg name="P" default="0.0"/>
    <arg name="Y" default="0.0"/>
    <!--############### Control Method ###################-->
    <!--
      0: PX4 
      1: Geometric Control (KumarRobotics)
      2: Geometric Control (EnergyBasedControl)
    -->
    <arg name="control_method" default="2"/>
    
    <!--############### Parameters ###################-->
    <arg name="nodelet_manager_name" default="nodelet_manager_control"/>
    <arg name="start_nodelet_manager" default="true"/>
    <arg name="odom" default="/mavros/local_position/odom"/>
    <arg name="so3_cmd" default="so3_cmd"/>
    <arg name="num_props" default="4"/>
    <arg name="kf" default="5.45e-06"/>
    <arg name="lin_cof_a" default="0.001433628"/>
    <arg name="lin_int_b" default="-0.433628319"/>

    <!--############### ERL Quadrotor Control ###################-->
    <group if="$(eval control_method == 0)">
      <arg name="control" default="PX4"/>
      <!-- Launch offboard node -->
      <node name="offb" pkg="erl_quadrotor_control" type="offb_node" output="screen">
        <param name="controlMethod" value="$(arg control)"/>
      </node>
    </group>

    
        <group if="$(eval control_method == 2)">
      <arg name="control" default="LEARNED_ENERGY_BASED"/>
      <!-- Launch offboard node -->
      <node name="offb" pkg="erl_quadrotor_control" type="offb_node" output="screen">
        <param name="controlMethod" value="$(arg control)"/>
        <param name="Kpx" value="4.0"/>
        <param name="Kpy" value="4.0"/>
        <param name="Kpz" value="14.0"/>
        <!-- Kv GAINS -->
        <param name="Kvx" value="1.5"/>
        <param name="Kvy" value="1.5"/>
        <param name="Kvz" value="2.25"/>
        <!-- KR GAINS -->
        <param name="KRx" value="1.0"/>
        <param name="KRy" value="1.0"/>
        <param name="KRz" value="1.0"/>
        <!-- Kw GAINS -->
        <param name="Kwx" value="1.0"/>
        <param name="Kwy" value="1.0"/>
        <param name="Kwz" value="1.0"/>
        <!-- Trained Model -->
        <param name="Gnet" value="/home/erl/se3hamdl_ws_release/src/erl_quadrotor_control/trained_model/gnet.pt"/>
        <param name="Dvnet" value="/home/erl/se3hamdl_ws_release/src/erl_quadrotor_control/trained_model/Dvnet.pt"/>
        <param name="Dwnet" value="/home/erl/se3hamdl_ws_release/src/erl_quadrotor_control/trained_model/Dwnet.pt"/>
      </node>
    </group>

    <group if="$(eval control_method == 1)">
      <arg name="control" default="GEOMETRIC"/>
      <!-- Launch controller -->
      <node pkg="nodelet" type="nodelet" name="$(arg nodelet_manager_name)"
      args="manager"
      output="screen"
      if="$(arg start_nodelet_manager)"/>

      <node pkg="nodelet" type="nodelet" args="standalone kr_mav_controllers/SO3ControlNodelet"
        name="so3_control"
        required="true"
        output="screen">
        <rosparam file="$(find erl_quadrotor_control)/config/gains.yaml"/>
        <param name="mass" value="1.3"/>
        <remap from="~odom" to="/mavros/local_position/odom"/>
        <remap from="~position_cmd" to="position_cmd"/>
        <remap from="~so3_cmd" to="so3_cmd"/>
        <remap from="~motors" to="motors"/>
      </node>

      <node pkg="nodelet" type="nodelet" args="standalone kr_mavros_interface/SO3CmdToMavros"
        name="so3cmd_to_mavros"
        required="true"
        clear_params="true"
        output="screen">
        <param name="num_props" value="$(arg num_props)"/>
        <param name="kf" value="$(arg kf)"/>
        <param name="lin_cof_a" value="$(arg lin_cof_a)"/>
        <param name="lin_int_b" value="$(arg lin_int_b)"/>
        <remap from="~odom" to="$(arg odom)"/>
        <remap from="~so3_cmd" to="$(arg so3_cmd)"/>
        <remap from="~imu" to="mavros/imu/data" />
        <remap from="~attitude_raw" to="mavros/setpoint_raw/attitude" />
      </node>

      <!-- Launch offboard node -->
      <node name="offb" pkg="erl_quadrotor_control" type="offb_node" output="screen">
        <param name="controlMethod" value="$(arg control)"/>
      </node>
    </group>

    <!-- Launch remote node -->
    <node name="dummy_remote" pkg="erl_quadrotor_control" type="dummy_remote_node" output="screen"/>
    
    <!-- Launch mocap node -->
    <node name="mocap_sim_node" pkg="erl_quadrotor_control" type="mocap_sim_node" output="screen"/>

    <!-- Launch torch C++ node -->
    <!--node name="se3hamdl_control_node" pkg="erl_quadrotor_control" type="se3hamdl_control_node" output="screen"/-->

    <!--############### RVIZ ###################-->
    <!-- Launch rviz -->
    <node pkg="rviz" type="rviz" name="rviz"
          args="-d $(find erl_quadrotor_control)/rviz/quadrotor.rviz"/>

    <!--############### PX4 Simulator ###################-->
    <!-- Launch PX4 simulator -->
    <include file="$(find px4)/launch/mavros_posix_sitl.launch">
		<arg name="x" value = "$(arg x)" />
		<arg name="y" value = "$(arg y)" />
		<arg name="z" value = "$(arg z)" />
		<arg name="R" value = "$(arg R)" />
		<arg name="P" value = "$(arg P)" />
		<arg name="Y" value = "$(arg Y)" />
    </include>

    <!--############### ODOM to MAP TF ###################-->
    <node pkg="tf" type="static_transform_publisher" name="map_odom_broadcaster" args="0 0 0 0 0 0 odom map 1000" />


</launch>
